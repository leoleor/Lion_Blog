import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as e,f as p}from"./app-83b11d82.js";const r={},t=p('<h2 id="不改变数组" tabindex="-1"><a class="header-anchor" href="#不改变数组" aria-hidden="true">#</a> 不改变数组</h2><ul><li><p>​concat()---连接两个或更多的数组，并返回结果。【es6用扩展运算符…】</p></li><li><p>every()---检测数组元素的每个元素是否都符合条件。</p></li><li><p>some()---检测数组元素中是否有元素符合指定条件。</p></li><li><p>​filter()---检测数组元素，并返回符合条件所有元素的数组。</p></li><li><p>find()---返回符合条件的第一个元素的值。【区别filter找到后会停止遍历】</p></li><li><p>​indexOf()---搜索数组中的元素，并返回它所在的位置。</p></li><li><p>​join()---把数组的所有元素放入一个字符串。</p></li><li><p>​toString()---把数组转换为字符串，并返回结果。</p></li><li><p>​lastIndexOf()---返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索。</p></li><li><p>​map()---通过指定函数处理数组的每个元素，并返回处理后的数组。</p></li><li><p>​slice()---选取数组的的一部分，并返回一个新数组。</p></li><li><p>​slice(start,end)start必填，end选填不包含此元素</p></li><li><p>​valueOf()---返回数组对象的原始值。(布尔对象)</p></li><li><p>reduce()---从数组的元素中，计算出一个值。</p><p>reduce((sum,cur,index,arr)=&gt;{},0)</p></li></ul><h2 id="改变原数组" tabindex="-1"><a class="header-anchor" href="#改变原数组" aria-hidden="true">#</a> 改变原数组</h2><ul><li><p>pop()---删除并返回数组的最后一个元素。</p></li><li><p>​push()---向数组的末尾添加一个或更多元素，并返回新的长度。</p></li><li><p>shift()---删除并返回数组的第一个元素。</p></li><li><p>unshift()---向数组的开头添加一个或更多元素，并返回新的长度。</p></li><li><p>reverse()---反转数组的元素顺序。</p></li><li><p>sort()---对数组的元素进行排序。</p></li><li><p>splice()---用于插入、删除或替换数组的元素。</p><p>array.splice(index, howmany, item1, …, itemX)<br> index: 必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。<br> howmany：必需。要删除的项目数量。如果设置为 0，则不会删除项目。<br> item1, …, itemX: 可选。向数组添加的新项目。</p></li></ul>',4),a=[t];function n(s,c){return l(),e("div",null,a)}const h=i(r,[["render",n],["__file","数组.html.vue"]]);export{h as default};
