const e=JSON.parse('{"key":"v-7da46b46","path":"/accumulation/JavaScript/%E6%95%B0%E7%BB%84.html","title":"数组","lang":"zh-CN","frontmatter":{"title":"数组","category":["面试"],"tag":["JavaScript"],"star":false,"sticky":false,"article":true,"description":"不改变数组 ​concat()---连接两个或更多的数组，并返回结果。【es6用扩展运算符…】 every()---检测数组元素的每个元素是否都符合条件。 some()---检测数组元素中是否有元素符合指定条件。 ​filter()---检测数组元素，并返回符合条件所有元素的数组。 find()---返回符合条件的第一个元素的值。【区别filter找到后会停止遍历】 ​indexOf()---搜索数组中的元素，并返回它所在的位置。 ​join()---把数组的所有元素放入一个字符串。 ​toString()---把数组转换为字符串，并返回结果。 ​lastIndexOf()---返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索。 ​map()---通过指定函数处理数组的每个元素，并返回处理后的数组。 ​slice()---选取数组的的一部分，并返回一个新数组。 ​slice(start,end)start必填，end选填不包含此元素 ​valueOf()---返回数组对象的原始值。(布尔对象) reduce()---从数组的元素中，计算出一个值。 reduce((sum,cur,index,arr)=&gt;{},0)","head":[["meta",{"property":"og:url","content":"https://leoleor.github.io/Lion_Blog/accumulation/JavaScript/%E6%95%B0%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"一只攻城狮"}],["meta",{"property":"og:title","content":"数组"}],["meta",{"property":"og:description","content":"不改变数组 ​concat()---连接两个或更多的数组，并返回结果。【es6用扩展运算符…】 every()---检测数组元素的每个元素是否都符合条件。 some()---检测数组元素中是否有元素符合指定条件。 ​filter()---检测数组元素，并返回符合条件所有元素的数组。 find()---返回符合条件的第一个元素的值。【区别filter找到后会停止遍历】 ​indexOf()---搜索数组中的元素，并返回它所在的位置。 ​join()---把数组的所有元素放入一个字符串。 ​toString()---把数组转换为字符串，并返回结果。 ​lastIndexOf()---返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索。 ​map()---通过指定函数处理数组的每个元素，并返回处理后的数组。 ​slice()---选取数组的的一部分，并返回一个新数组。 ​slice(start,end)start必填，end选填不包含此元素 ​valueOf()---返回数组对象的原始值。(布尔对象) reduce()---从数组的元素中，计算出一个值。 reduce((sum,cur,index,arr)=&gt;{},0)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-10T12:39:18.000Z"}],["meta",{"property":"article:author","content":"狮子"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:modified_time","content":"2023-08-10T12:39:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-10T12:39:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"狮子\\"}]}"]]},"headers":[{"level":2,"title":"不改变数组","slug":"不改变数组","link":"#不改变数组","children":[]},{"level":2,"title":"改变原数组","slug":"改变原数组","link":"#改变原数组","children":[]}],"git":{"createdTime":1691671158000,"updatedTime":1691671158000,"contributors":[{"name":"狮子","email":"hzr1642921219@163.com","commits":1}]},"readingTime":{"minutes":1.65,"words":496},"filePathRelative":"accumulation/JavaScript/数组.md","localizedDate":"2023年8月10日","excerpt":"<h2> 不改变数组</h2>\\n<ul>\\n<li>\\n<p>​concat()---连接两个或更多的数组，并返回结果。【es6用扩展运算符…】</p>\\n</li>\\n<li>\\n<p>every()---检测数组元素的每个元素是否都符合条件。</p>\\n</li>\\n<li>\\n<p>some()---检测数组元素中是否有元素符合指定条件。</p>\\n</li>\\n<li>\\n<p>​filter()---检测数组元素，并返回符合条件所有元素的数组。</p>\\n</li>\\n<li>\\n<p>find()---返回符合条件的第一个元素的值。【区别filter找到后会停止遍历】</p>\\n</li>\\n<li>\\n<p>​indexOf()---搜索数组中的元素，并返回它所在的位置。</p>\\n</li>\\n<li>\\n<p>​join()---把数组的所有元素放入一个字符串。</p>\\n</li>\\n<li>\\n<p>​toString()---把数组转换为字符串，并返回结果。</p>\\n</li>\\n<li>\\n<p>​lastIndexOf()---返回一个指定的字符串值最后出现的位置，在一个字符串中的指定位置从后向前搜索。</p>\\n</li>\\n<li>\\n<p>​map()---通过指定函数处理数组的每个元素，并返回处理后的数组。</p>\\n</li>\\n<li>\\n<p>​slice()---选取数组的的一部分，并返回一个新数组。</p>\\n</li>\\n<li>\\n<p>​slice(start,end)start必填，end选填不包含此元素</p>\\n</li>\\n<li>\\n<p>​valueOf()---返回数组对象的原始值。(布尔对象)</p>\\n</li>\\n<li>\\n<p>reduce()---从数组的元素中，计算出一个值。</p>\\n<p>reduce((sum,cur,index,arr)=&gt;{},0)</p>\\n</li>\\n</ul>","autoDesc":true}');export{e as data};
